{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/components/payment/payment.component.css","webpack:///./src/app/components/payment/payment.component.html","webpack:///./src/app/components/payment/payment.component.ts","webpack:///./src/app/components/users/users-add/users-add.component.css","webpack:///./src/app/components/users/users-add/users-add.component.html","webpack:///./src/app/components/users/users-add/users-add.component.ts","webpack:///./src/app/components/users/users-sign-in/users-sign-in.component.css","webpack:///./src/app/components/users/users-sign-in/users-sign-in.component.html","webpack:///./src/app/components/users/users-sign-in/users-sign-in.component.ts","webpack:///./src/app/components/weather/weater-display/weater-display.component.css","webpack:///./src/app/components/weather/weater-display/weater-display.component.html","webpack:///./src/app/components/weather/weater-display/weater-display.component.ts","webpack:///./src/app/shared/models/UserModel.ts","webpack:///./src/app/shared/models/weatherCheckBox.ts","webpack:///./src/app/shared/services/users/users.service.ts","webpack:///./src/app/shared/services/weather-data/weather-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAC8B;AACW;AACM;AACxD;AAC4B;AAE1E,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,iGAAiB,EAAC;IACpD,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4GAAoB,EAAC;IACtD,EAAC,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,kHAAsB,EAAE,WAAW,EAAE,CAAC,0DAAS,CAAC,EAAC;IACtF,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,sFAAgB,EAAC;IACrD,EAAC,IAAI,EAAG,EAAE,EAAE,UAAU,EAAC,aAAa,EAAE,SAAS,EAAG,MAAM,EAAC;CAC1D,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpB7B,+DAA+D,2H;;;;;;;;;;;ACA/D,y3BAAy3B,mBAAmB,wwB;;;;;;;;;;;;;;;;;;;ACA11B;AACT;AAC4B;AASrE;IAKE,sBAAoB,MAAe,EAAU,WAAyB;QAAtE,iBAQC;QARmB,WAAM,GAAN,MAAM,CAAS;QAAU,gBAAW,GAAX,WAAW,CAAc;QAHtE,UAAK,GAAG,oBAAoB,CAAC;QAI3B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAE,WAAC;YACrC,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,CAAC,EAAE,eAAK;YACJ,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QAC1B,CAAC,CACF;IACH,CAAC;IAED,6BAAM,GAAN;QACI,QAAQ,CAAC,MAAM,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAlBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAM6B,sDAAM,EAAuB,iFAAY;OAL3D,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiC;AACjB;AACI;AACW;AACT;AACsC;AAChB;AACoB;AACd;AAChC;AACqD;AACM;AACxD;AACY;AACgB;AAsB1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iGAAiB;gBACjB,6GAAoB;gBACpB,mHAAsB;gBACtB,uFAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB,EAAE,qEAAgB,EAAE,2DAAW,EAAE,0DAAe;aACjE;YACD,SAAS,EAAE,CAAC,iFAAY,EAAE,qGAAkB,EAAE,2DAAS,EAAC;oBACtD,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAG,uEAAe;oBAC1B,KAAK,EAAG,IAAI;iBACb,CAAC;YACF,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACpCqB;AACiE;AAO5G;IACE,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;IACrC,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QACxB,IAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI;YAC1C,OAAO,IAAI,CAAC;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QACtC,OAAO,KAAK,CAAC;IACnB,CAAC;IATU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE4B,sDAAM;OADvB,SAAS,CAUrB;IAAD,gBAAC;CAAA;AAVqB;;;;;;;;;;;;;;;;;;;;ACNQ;AACa;AACF;AAGzC;IAGI,yBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAGvC,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAoBC;QAnBG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,MAAM;YACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;QAEpC,IAAI,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE;YAC3C,IAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;gBACxB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aAC3F,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;iBACxB,EAAE,CACH,cAAI,IAAM,CAAC,EACX,aAAG;gBACC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG;oBAClB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;YACjD,CAAC,CACA,CAAC;SACT;aACI;YACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SAC5C;IACL,CAAC;IA1BQ,eAAe;QAD3B,gEAAU,EAAE;+EAImB,sDAAM;OAHzB,eAAe,CA4B3B;IAAD,sBAAC;CAAA;AA5B2B;;;;;;;;;;;;ACP5B,+DAA+D,uJ;;;;;;;;;;;ACA/D,w1B;;;;;;;;;;;;;;;;;;;;ACAkD;AAMyB;AAC5C;AAY/B;IASE,0BAAoB,WAAyB;QAA7C,iBAQE;QARkB,gBAAW,GAAX,WAAW,CAAc;QANtC,gBAAW,GAAY,KAAK,CAAC;QAC7B,eAAU,GAAY,KAAK,CAAC;QAC5B,cAAS,GAAY,KAAK,CAAC;QAClB,YAAO,GAAG,+BAA+B,CAAC;QAIxD,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAE,WAAC;YACvC,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,CAAC,EAAE,eAAK;YACJ,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QAC1B,CAAC,CACF;IACA,CAAC;IAEF,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,0CAAe,GAAf;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEO,qCAAU,GAAlB;QAAA,iBAgBC;QAfC,QAAQ;QACR,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,CAAE,WAAC;YAC5D,KAAI,CAAC,YAAY,GAAG,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;QAAI,CAAC,EACpC,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,WAAC;YACxD,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,2BAA2B,CAAC,CAAC;QACpD,CAAC,EAAE,gBAAM;YACP,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IAEP,CAAC;IAGO,qCAAU,GAAlB;QAAA,iBAiEC;QAhEC,IAAI,CAAC,YAAY,GAAG;YAClB,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,kFAAkF;YAC5F,mBAAmB,EAAE,UAAC,IAAI,IAAK,QAAqB;gBAClD,MAAM,EAAE,SAAS;gBACjB,cAAc,EAAE;oBACd;wBACE,MAAM,EAAE;4BACN,aAAa,EAAE,KAAK;4BACpB,KAAK,EAAE,MAAM;4BACb,SAAS,EAAE;gCACT,UAAU,EAAE;oCACV,aAAa,EAAE,KAAK;oCACpB,KAAK,EAAE,MAAM;iCACd;6BACF;yBACF;wBACD,KAAK,EAAE;4BACL;gCACE,IAAI,EAAE,yBAAyB;gCAC/B,QAAQ,EAAE,GAAG;gCACb,QAAQ,EAAE,eAAe;gCACzB,WAAW,EAAE;oCACX,aAAa,EAAE,KAAK;oCACpB,KAAK,EAAE,MAAM;iCACd;6BACF;yBACF;qBACF;iBACF;aACF,GA3B8B,CA2B9B;YACD,QAAQ,EAAE;gBACR,MAAM,EAAE,MAAM;aACf;YACD,KAAK,EAAE;gBACL,KAAK,EAAE,QAAQ;gBACf,MAAM,EAAE,UAAU;aACnB;YACD,SAAS,EAAE,UAAC,IAAI,EAAE,OAAO;gBACvB,OAAO,CAAC,GAAG,CAAC,0DAA0D,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBACvF,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAC,OAAY;oBACpC,OAAO,CAAC,GAAG,CAAC,+DAA+D,EAAE,OAAO,CAAC,CAAC;gBACxF,CAAC,CAAC,CAAC;YAEL,CAAC;YACD,qBAAqB,EAAE,UAAC,IAAI;gBAC1B,OAAO,CAAC,GAAG,CAAC,0GAA0G,EAAE,IAAI,CAAC,CAAC;gBAC9H,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC;YACD,QAAQ,EAAE,UAAC,IAAI,EAAE,OAAO;gBACtB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;gBACvC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEzB,CAAC;YACD,OAAO,EAAE,aAAG;gBACV,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;gBAC5B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC;YACD,OAAO,EAAE;gBACP,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,KAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;SACF,CAAC;IACJ,CAAC;IAEO,sCAAW,GAAnB;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEO,mCAAQ,GAAhB;QACE,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAChC,CAAC;IAzHU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,oHAAuC;;SAExC,CAAC;+EAWiC,wFAAY;OATlC,gBAAgB,CA0H5B;IAAD,uBAAC;CAAA;AA1H4B;;;;;;;;;;;;ACnB7B,+DAA+D,uK;;;;;;;;;;;ACA/D,86D;;;;;;;;;;;;;;;;;;;;;ACAkD;AACU;AACe;AAC5C;AAM/B;IAIE,2BAAoB,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;IAAI,CAAC;IAElD,oCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,yEAAS,EAAE;IAC9B,CAAC;IAEO,oCAAQ,GAAhB;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,WAAC;YAC9C,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,qBAAqB,CAAC,CAAC;QACjE,CAAC,EAAE,eAAK;YACN,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,0BAA0B,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAhBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,gIAAyC;;SAE1C,CAAC;+EAKiC,wFAAY;OAJlC,iBAAiB,CAkB7B;IAAD,wBAAC;CAAA;AAlB6B;;;;;;;;;;;;ACT9B,+DAA+D,+K;;;;;;;;;;;ACA/D,wsCAAwsC,SAAS,4S;;;;;;;;;;;;;;;;;;;;;;;ACA/pC;AACyB;AAClB;AAC1B;AAC6B;AAGY;AAOxE;IAKE,8BAAoB,WAA0B,EAAU,MAAe;QAAnD,gBAAW,GAAX,WAAW,CAAe;QAAU,WAAM,GAAN,MAAM,CAAS;IAAI,CAAC;IAE5E,uCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,yEAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,qFAAe,CAAC,KAAK,EAAE,oBAAoB,CAAC;YAChD,IAAI,qFAAe,CAAC,KAAK,EAAE,SAAS,CAAC;YACrC,IAAI,qFAAe,CAAC,KAAK,EAAE,eAAe,CAAC;YAC3C,IAAI,qFAAe,CAAC,KAAK,EAAE,UAAU,CAAC;YACtC,IAAI,qFAAe,CAAC,KAAK,EAAE,YAAY,CAAC;YACxC,IAAI,qFAAe,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;IAChE,CAAC;IAEQ,uCAAQ,GAAf;QAAA,iBAUD;QATG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAU;YAClE,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,CAAC;YAC7C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACpE,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC;QAClD,CAAC,EAAC,eAAK;YACL,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IAEL,CAAC;IAEM,oCAAK,GAAZ,UAAa,aAA6B;QACxC,IAAG,aAAa,CAAC,SAAS,IAAI,KAAK,EAAC;YAClC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC;SAChC;aAAI;YACH,aAAa,CAAC,SAAS,GAAG,KAAK,CAAC;SACjC;IACH,CAAC;IAnCU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,4IAA6C;;SAE9C,CAAC;+EAMkC,wFAAY,EAAmB,sDAAM;OAL5D,oBAAoB,CAqChC;IAAD,2BAAC;CAAA;AArCgC;;;;;;;;;;;;ACdjC,gCAAgC,qBAAqB,oHAAoH,OAAO,+CAA+C,+iB;;;;;;;;;;;ACA/N,oVAAoV,wCAAwC,mKAAmK,uBAAuB,uMAAuM,0CAA0C,GAAG,4BAA4B,KAAK,0CAA0C,GAAG,4BAA4B,iEAAiE,qBAAqB,+DAA+D,qBAAqB,gGAAgG,sBAAsB,2EAA2E,mBAAmB,6EAA6E,qBAAqB,iH;;;;;;;;;;;;;;;;;;;ACAl0C;AAE6C;AAE9C;AASjD;IAOE,gCAAoB,cAAkC,EAAU,KAAqB;QAAjE,mBAAc,GAAd,cAAc,CAAoB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAJrF,YAAO,GAAG,IAAI,IAAI,EAAE,CAAC;IAIoE,CAAC;IAE1F,yCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7E,IAAI,CAAC,YAAY,GAAG,aAAa;QACjC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAEO,yCAAQ,GAAhB;QAAA,iBAEC;QADC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,WAAC,IAAG,YAAI,CAAC,OAAO,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;IACnE,CAAC;IAEM,2CAAU,GAAjB,UAAkB,QAAiB,EAAE,QAAiB;QACpD,QAAQ;QACN,IAAG,IAAI,CAAC,WAAW,EACnB;YACE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;aACI,IAAG,CAAC,IAAI,CAAC,WAAW,EACzB;YACE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAChE,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAChE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;IACL,CAAC;IAEM,qDAAoB,GAA3B,UAA4B,WAAoB;QAE5C,OAAQ,CAAC,WAAW,GAAG,CAAC,GAAC,CAAC,CAAC,GAAG,EAAE;IACpC,CAAC;IAEM,iDAAgB,GAAvB,UAAwB,eAAwB;QAE5C,OAAQ,CAAC,eAAe,GAAE,EAAE,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;IACxC,CAAC;IA7CU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,iJAA8C;;SAE/C,CAAC;+EAQoC,4GAAkB,EAAiB,8DAAc;OAP1E,sBAAsB,CA8ClC;IAAD,6BAAC;CAAA;AA9CkC;;;;;;;;;;;;;ACbnC;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;IAII,yBAAY,SAAmB,EAAE,KAAa;QAC5C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK;IACpB,CAAC;IAEH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACTwC;AACkB;AACF;AACR;AAEjB;AACuB;AAKzD;IAME,sBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAKpD,YAAO,GAAG,wEAAW,CAAC,WAAW,CAAC;QAClC,cAAS,GAAG,IAAI,gEAAW,CAAC,EAAC,SAAS,EAAC,MAAM,EAAC,CAAC,CAAC;QALtD,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAY,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC5D,CAAC;IAKM,8BAAO,GAAd,UAAe,MAAc;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,OAAO,GAAG,oBAAoB,GAAG,MAAM,CAAC,CAAC;IAChF,CAAC;IAEM,8BAAO,GAAd,UAAe,IAAe;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAG,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;IAC7F,CAAC;IAEM,iCAAU,GAAjB,UAAkB,IAAe;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,IAAI,EAAE,EAAC,OAAO,EAAG,IAAI,CAAC,SAAS,EAAC,CAAC,CAAC;IAC7F,CAAC;IAEM,yCAAkB,GAAzB,UAA0B,IAAe;QACrC,IAAI,IAAI,GAAG,WAAW,GAAC,IAAI,CAAC,KAAK,GAAC,YAAY,GAAC,IAAI,CAAC,QAAQ,GAAC,sBAAsB,CAAC;QACpF,IAAI,SAAS,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAC,8BAA8B,EAAE,SAAS,EAAC,MAAM,EAAC,CAAC,CAAC;QACnG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,OAAO,EAAC,IAAI,EAAC,EAAC,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;IAC1E,CAAC;IAGM,oCAAa,GAApB;QAAA,iBASC;QARG,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC;aAC5D,IAAI,CAAC,0DAAG,CAAC,cAAI;YACZ,IAAG,IAAI,EAAC;gBACN,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEM,6BAAM,GAAb;QAEE,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACrC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAjDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAO0B,+DAAU,EAAkB,sDAAM;OANjD,YAAY,CAkDxB;IAAD,mBAAC;CAAA;AAlDwB;;;;;;;;;;;;;;;;;;;;ACXkB;AACO;AACS;AAO3D;IAEE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAE5B,YAAO,GAAG,wEAAW,CAAC,WAAW,CAAC;IAFF,CAAC;IAIlC,uCAAU,GAAjB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;IAClE,CAAC;IARU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,kBAAkB,CAS9B;IAAD,yBAAC;CAAA;AAT8B;;;;;;;;;;;;;ACT/B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,yCAAyC;CACvD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UsersAddComponent } from './components/users/users-add/users-add.component';\nimport { UsersSignInComponent } from './components/users/users-sign-in/users-sign-in.component';\nimport { WeaterDisplayComponent } from './components/weather/weater-display/weater-display.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { PaymentComponent } from './components/payment/payment.component';\n\nconst routes: Routes = [\n  {path: 'users/create', component: UsersAddComponent},\n  {path: 'users/login', component: UsersSignInComponent},\n  {path: 'weather/:object', component: WeaterDisplayComponent, canActivate: [AuthGuard]},\n  {path: 'payment/paypal', component: PaymentComponent},\n  {path : '', redirectTo:'users/login', pathMatch : 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<body>\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n\\n        </ul>\\n          <ul class=\\\"nav navbar-nav ml-auto\\\" *ngIf='!currentUser'>\\n              <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\" [routerLink]=\\\"['users/login']\\\" >Login</a>\\n          </ul>\\n          \\n          <ul class=\\\"nav navbar-nav ml-auto\\\" *ngIf='currentUser'>\\n              <a class=\\\"nav-item nav-link\\\"  href=\\\"#\\\">Welcome, {{currentUser.email}}</a>\\n              <a class=\\\"nav-item nav-link\\\" (click)=\\\"Logout()\\\" [routerLink]=\\\"['users/login']\\\" >Logout</a>\\n          </ul>\\n      </div>\\n    </nav>\\n    <div class=\\\"jumbotron jumbotron-fluid\\\">\\n        <div class=\\\"container\\\">\\n          <h1 class=\\\"display-4\\\">My Weather App</h1>\\n          <p class=\\\"lead\\\">The Weather Channel and weather.com provide a national and local weather forecast for cities, as well as weather radar, report and hurricane coverage.</p>\\n          <p class=\\\"lead\\\" *ngIf='currentUser && currentUser.isMember == false'>Become a member to receive live updates on SMS by applying<a [routerLink]=\\\"['/payment/paypal']\\\"> here.</a></p>\\n        </div>\\n    </div>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UsersService } from './shared/services/users/users.service';\nimport { UserModel } from './shared/models/UserModel';\nimport { debug } from 'util';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n\n  title = 'myClientWeatherApp';\n  currentUser : UserModel;\n\n  constructor(private router : Router, private userService: UsersService){\n    this.userService.currentUser.subscribe( x =>{\n        this.currentUser = x;\n        console.log(\"In Success \" + JSON.stringify(this.currentUser));\n      }, error =>{\n          console.log(\"Failed.\")\n      } \n    )\n  }\n\n  Logout() {\n      location.reload();\n      this.userService.logout();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgxPayPalModule } from 'ngx-paypal';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UsersAddComponent } from './components/users/users-add/users-add.component';\nimport { UsersService } from './shared/services/users/users.service';\nimport { WeatherDataService } from './shared/services/weather-data/weather-data.service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { UsersSignInComponent } from './components/users/users-sign-in/users-sign-in.component';\nimport { WeaterDisplayComponent } from './components/weather/weater-display/weater-display.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthInterceptor } from './auth/auth.interceptor';\nimport { PaymentComponent } from './components/payment/payment.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersAddComponent,\n    UsersSignInComponent,\n    WeaterDisplayComponent,\n    PaymentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule, HttpClientModule, FormsModule, NgxPayPalModule\n  ],\n  providers: [UsersService, WeatherDataService, AuthGuard,{\n    provide: HTTP_INTERCEPTORS,\n    useClass : AuthInterceptor,\n    multi : true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      if(localStorage.getItem('userToken') != null)\n        return true;\n        this.router.navigate(['users/login']);\n        return false;\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport 'rxjs/add/operator/do';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n    private currentUser : string\r\n    constructor(private router: Router) { }\r\n\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): import(\"rxjs\").Observable<HttpEvent<any>> {\r\n        if (req.headers.get('No-Auth') == \"True\")\r\n            return next.handle(req.clone());\r\n            \r\n        if (localStorage.getItem('userToken') != null) {\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", \"Bearer \" + localStorage.getItem('userToken'))\r\n            });\r\n            return next.handle(clonedreq)\r\n                .do(\r\n                succ => { },\r\n                err => {\r\n                    if (err.status === 401)\r\n                        this.router.navigateByUrl('users/login');\r\n                }\r\n                );\r\n        }\r\n        else {\r\n            this.router.navigateByUrl('users/login');\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\\n<div class=\\\"mt-2\\\" *ngIf=\\\"showSuccess\\\">\\n  <div class=\\\"alert alert-success mt-2\\\">\\n    Yeah! Your <em>sandbox</em> transaction was successful.\\n  </div>\\n</div>\\n\\n<div class=\\\"mt-2\\\" *ngIf=\\\"showError\\\">\\n  <div class=\\\"alert alert-danger mt-2\\\">\\n    Oh no! Your <em>sandbox</em> transaction failed.\\n  </div>\\n</div>\\n\\n<div class=\\\"mt-2\\\" *ngIf=\\\"showCancel\\\">\\n  <div class=\\\"alert alert-info mt-2\\\">\\n    Your transaction was cancelled.\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"mt-2 text-center\\\">\\n  <h5>Order Details</h5>\\n  <hr>\\n  <div class=\\\"alert alert-info mt-2\\\">\\n    <p><b>Name: </b> MyWeatherApp</p>\\n    <p><b>Offer: </b> Recieve by SMS</p>\\n    <p><b>Value: </b> 9.99€</p>\\n\\n    <div class=\\\"mt-2\\\">\\n        <ngx-paypal [config]=\\\"payPalConfig\\\"></ngx-paypal>\\n      </div>\\n  </div>\\n  \\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  IPayPalConfig,\n  ICreateOrderRequest \n} from 'ngx-paypal';\nimport { UserModel } from 'src/app/shared/models/UserModel';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\nimport Swal from 'sweetalert2';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n\ndeclare var hljs: any;\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\n\nexport class PaymentComponent implements OnInit  {\n\n  public payPalConfig?: IPayPalConfig;\n  public showSuccess: boolean = false;\n  public showCancel: boolean = false;\n  public showError: boolean = false;\n  public readonly npmCode = `npm install ngx-paypal --save`;\n  loggedInUser : UserModel;\n\n  constructor(private userService: UsersService) {\n    this.userService.currentUser.subscribe( x =>{\n      this.loggedInUser = x;\n      console.log(\"In Success \" + JSON.stringify(this.loggedInUser));\n    }, error =>{\n        console.log(\"Failed.\")\n    } \n  )\n   }\n\n  ngOnInit(): void {\n    this.initConfig();\n  }\n\n  ngAfterViewInit(): void {\n    this.prettify();\n  }\n\n  private updateUser(){\n    debugger\n    this.userService.getUser(this.loggedInUser.usersId).subscribe( x => {\n        this.loggedInUser = x \n        console.log(this.loggedInUser);    },\n        error => {\n          console.log(\"Failed...\");\n      });\n\n      this.loggedInUser.isMember = 1;    \n      this.userService.updateUser(this.loggedInUser).subscribe(x => {\n        Swal.fire('Success', 'Operation was successfull');\n      }, error1 => {\n        Swal.fire('Error', 'Operation was unsuccessful');\n      });\n\n  }\n\n\n  private initConfig(): void {\n    this.payPalConfig = {\n      currency: 'EUR',\n      clientId: 'AXoM43qq23a4XRi3hmDVCmFZbcACephAKgGfTiOkXcwvO8gM5hP-e4GdKdU9TjFQT4wiHztF-qrlILh8',\n      createOrderOnClient: (data) => <ICreateOrderRequest>{\n        intent: 'CAPTURE',\n        purchase_units: [\n          {\n            amount: {\n              currency_code: 'EUR',\n              value: '9.99',\n              breakdown: {\n                item_total: {\n                  currency_code: 'EUR',\n                  value: '9.99'\n                }\n              }\n            },\n            items: [\n              {\n                name: 'Enterprise Subscription',\n                quantity: '1',\n                category: 'DIGITAL_GOODS',\n                unit_amount: {\n                  currency_code: 'EUR',\n                  value: '9.99',\n                },\n              }\n            ]\n          }\n        ]\n      },\n      advanced: {\n        commit: 'true'\n      },\n      style: {\n        label: 'paypal',\n        layout: 'vertical'\n      },\n      onApprove: (data, actions) => {\n        console.log('onApprove - transaction was approved, but not authorized', data, actions);\n        actions.order.get().then((details: any) => {\n          console.log('onApprove - you can get full order details inside onApprove: ', details);\n        });\n\n      },\n      onClientAuthorization: (data) => {\n        console.log('onClientAuthorization - you should probably inform your server about completed transaction at this point', data);\n        this.showSuccess = true;\n        this.updateUser();\n      },\n      onCancel: (data, actions) => {\n        console.log('OnCancel', data, actions);\n        this.showCancel = true;\n\n      },\n      onError: err => {\n        console.log('OnError', err);\n        this.showError = true;\n      },\n      onClick: () => {\n        console.log('onClick');\n        this.resetStatus();\n      },\n    };\n  }\n\n  private resetStatus(): void {\n    this.showError = false;\n    this.showSuccess = false;\n    this.showCancel = false;\n  }\n\n  private prettify(): void {\n    hljs.initHighlightingOnLoad();\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy91c2Vycy91c2Vycy1hZGQvdXNlcnMtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\" style=\\\"text-align: center\\\">\\n          <h1 class=\\\"display-4\\\">- Register Member -</h1>\\n          <hr>\\n  </div>\\n<div class=\\\"col-5\\\">\\n      <form> \\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"exampleFormControlInput1\\\">First Name</label>\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"model.firstName\\\" name=\\\"firstName\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Enter First Name...\\\">\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput1\\\">Last name</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"model.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Enter last name..\\\">\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput1\\\">Email</label>\\n                <input type=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Enter Email..\\\">\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput1\\\">Password</label>\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\"  class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Enter Password...\\\">\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"exampleFormControlInput1\\\">Mobile Number</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"model.telNumber\\\" name=\\\"telNumber\\\"  class=\\\"form-control\\\" id=\\\"exampleFormControlInput1\\\" placeholder=\\\"Enter mobile number\\\">\\n              </div>\\n                  \\n          <button type=\\\"button\\\" (click)=\\\"Register()\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </form>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'src/app/shared/models/UserModel';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-users-add',\n  templateUrl: './users-add.component.html',\n  styleUrls: ['./users-add.component.css']\n})\nexport class UsersAddComponent implements OnInit {\n\n  model: UserModel;\n\n  constructor(private userService: UsersService) { }\n\n  ngOnInit() {\n    this.model = new UserModel()\n  }\n\n  private Register(){\n    this.userService.addUser(this.model).subscribe(x=> {\n      Swal.fire('Success', this.model.email + ' added successfully');\n    }, error => {\n      Swal.fire('Error', 'Something wring happened');\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy91c2Vycy91c2Vycy1zaWduLWluL3VzZXJzLXNpZ24taW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\" style=\\\"text-align: center\\\">\\n              <h1 class=\\\"display-4\\\">- Login -</h1>\\n              <hr>\\n      </div>\\n  <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form  (ngSubmit)=\\\"OnSubmit()\\\"> \\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleFormControlInput1\\\">Email address</label>\\n                      <input type=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"  placeholder=\\\"name@example.com\\\" required>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                      <label for=\\\"exampleFormControlInput1\\\">Password</label>\\n                      <input type=\\\"password\\\"   [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\" class=\\\"form-control\\\"  placeholder=\\\"Enter password\\\" required>\\n                  </div>\\n\\n                  <div class=\\\"form-check form-check-inline\\\" *ngFor=\\\"let c of checkBoxes\\\">\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"weatherMain\\\" (click)=\\\"check(c)\\\" value=\\\"option1\\\">\\n                        <label class=\\\"form-check-label\\\" for=\\\"inlineCheckbox1\\\">{{c.value}}</label>\\n                  </div>\\n\\n              <hr>\\n              <button class=\\\"btn btn-primary\\\">Login</button>\\n              <hr>\\n              <h6>Create a new account  <a  [routerLink]=\\\"['/users/create']\\\">Register</a></h6>\\n              <hr>\\n          </form>\\n  </div>\\n<div>   \\n\"","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from 'src/app/shared/services/users/users.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { UserModel } from 'src/app/shared/models/UserModel';\nimport { WeatherModel } from 'src/app/shared/models/WeatherModel';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { weatherCheckBox } from 'src/app/shared/models/weatherCheckBox';\n\n@Component({\n  selector: 'app-users-sign-in',\n  templateUrl: './users-sign-in.component.html',\n  styleUrls: ['./users-sign-in.component.css']\n})\nexport class UsersSignInComponent implements OnInit {\n\n  user: UserModel;\n  checkBoxes : weatherCheckBox[]\n\n  constructor(private userService : UsersService, private router : Router) { }\n\n  ngOnInit() {\n    this.user = new UserModel();\n    this.checkBoxes = [new weatherCheckBox(false, 'Min/Max Temperatue'), \n                       new weatherCheckBox(false, 'Weather'),\n                       new weatherCheckBox(false, 'Weathern Desc'),\n                       new weatherCheckBox(false, 'Humidity'),\n                       new weatherCheckBox(false, 'wind Speed'),\n                       new weatherCheckBox(false, 'Wind Degrees')]\n  }\n\n    public OnSubmit(){\n      this.userService.userAuthentication(this.user).subscribe((data : any)=>{\n        localStorage.setItem('userToken', data.access_token);\n        this.userService.getUserClaims().subscribe();\n        this.router.navigate(['/weather/',JSON.stringify(this.checkBoxes)]);\n        Swal.fire('Success', ' Logged in successfully');\n      },error => {\n        Swal.fire('Error', 'login unsuccesfully');\n    });\n\n  }\n\n  public check(checkBoxValue:weatherCheckBox){\n    if(checkBoxValue.isChecked == false){\n      checkBoxValue.isChecked = true;\n    }else{\n      checkBoxValue.isChecked = false;\n    }\n  }\n\n}\n\n","module.exports = \".strokeme\\r\\n{\\r\\n    color: white;\\r\\n    text-shadow:\\r\\n    -1px -1px 0 #000,\\r\\n    1px -1px 0 #000,\\r\\n    -1px 1px 0 #000,\\r\\n    1px 1px 0 #000;  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3dlYXRoZXIvd2VhdGVyLWRpc3BsYXkvd2VhdGVyLWRpc3BsYXkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxZQUFZO0lBQ1o7Ozs7a0JBSWM7QUFDbEIiLCJmaWxlIjoiYXBwL2NvbXBvbmVudHMvd2VhdGhlci93ZWF0ZXItZGlzcGxheS93ZWF0ZXItZGlzcGxheS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0cm9rZW1lXHJcbntcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIHRleHQtc2hhZG93OlxyXG4gICAgLTFweCAtMXB4IDAgIzAwMCxcclxuICAgIDFweCAtMXB4IDAgIzAwMCxcclxuICAgIC0xcHggMXB4IDAgIzAwMCxcclxuICAgIDFweCAxcHggMCAjMDAwOyAgXHJcbn0iXX0= */\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\" style=\\\"text-align: center\\\">\\n          <h1 class=\\\"display-4\\\">- Weather Data -</h1> <button type=\\\"button\\\" *ngIf=\\\"checkBoxList[0].isChecked == true\\\" (click)=\\\"conversion(weather.mainTemp_max, weather.mainTemp_min)\\\"class=\\\"btn btn-outline-dark btn-sm\\\">Convert to {{temperature? 'Celcuis' : 'Fahreinheit'}}</button>\\n          <hr>\\n  </div>\\n\\n  <div class=\\\"card text-white bg-info offset-1 col-md-10 text-center\\\">\\n    <div class=\\\"card-header align-middle\\\"><h2>{{curDate | date:'EEEE'}}</h2></div>\\n    <div class=\\\"card-body\\\">\\n        <img src=\\\"http://openweathermap.org/img/w/10d.png\\\" width=\\\"30%\\\"/>\\n      <h5 class=\\\"card-title\\\" *ngIf=\\\"checkBoxList[0].isChecked == true\\\">{{weather.mainTemp_max |  number : '1.2-2'}} {{temperature? \\t'°F' : '°C'}} / {{weather.mainTemp_min |  number : '1.2-2'}} {{temperature? \\t'°F' : '°C'}}</h5>\\n\\n      <h3 *ngIf=\\\"checkBoxList[1].isChecked == true\\\">{{weather.weatherMain}}</h3>\\n      <h3 *ngIf=\\\"checkBoxList[2].isChecked == true\\\">{{weather.weatherDesc}}</h3>\\n      <hr>\\n      <span>\\n        <p *ngIf=\\\"checkBoxList[3].isChecked == true\\\"> Hum: {{weather.mainHumidity}}</p>\\n        <p *ngIf=\\\"checkBoxList[4].isChecked == true\\\">Wind Speed: {{weather.windSpeed}}</p>\\n        <p *ngIf=\\\"checkBoxList[5].isChecked == true\\\">Wind Degrees: {{weather.windDegrees}}</p>\\n        <ngx-paypal [config]=\\\"payPalConfig\\\"></ngx-paypal>\\n    </span>\\n    </div>\\n  </div>\\n\\n  \\n\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { WeatherModel } from 'src/app/shared/models/WeatherModel';\nimport { WeatherDataService } from 'src/app/shared/services/weather-data/weather-data.service';\nimport { weatherCheckBox } from 'src/app/shared/models/weatherCheckBox';\nimport { ActivatedRoute } from '@angular/router';\nimport { checkNoChanges } from '@angular/core/src/render3/instructions';\nimport { tick } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-weater-display',\n  templateUrl: './weater-display.component.html',\n  styleUrls: ['./weater-display.component.css']\n})\nexport class WeaterDisplayComponent implements OnInit {\n\n  weather: WeatherModel;\n  curDate = new Date();\n  checkBoxList : weatherCheckBox[];\n  temperature : Boolean\n\n  constructor(private weatherService: WeatherDataService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.temperature = true;\n    const checkboxList4 = JSON.parse(this.route.snapshot.paramMap.get('object'));\n    this.checkBoxList = checkboxList4\n    console.log(this.checkBoxList)\n    this.loadData();\n  }\n\n  private loadData(){\n    this.weatherService.getWeather().subscribe(x=> this.weather = x);\n  }\n\n  public conversion(temp_max : number, temp_min : number){\n    debugger\n      if(this.temperature)\n      {\n        this.weather.mainTemp_max = this.convertToCelsius(temp_max);\n        this.weather.mainTemp_min = this.convertToCelsius(temp_min);\n        this.temperature = false;\n      }\n      else if(!this.temperature)\n      {\n        this.weather.mainTemp_max = this.convertToFahreinheit(temp_max);\n        this.weather.mainTemp_min = this.convertToFahreinheit(temp_min);\n        this.temperature = true;\n      }\n  }\n\n  public convertToFahreinheit(tempCelsius : number) : number\n  {\n      return  (tempCelsius * 9/5) + 32\n  }\n\n  public convertToCelsius(tempFahreinheit : number) : number\n  {\n      return  (tempFahreinheit -32) * 5/9;\n  }\n}\n","export class UserModel{\r\n    usersId : string\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    password: string;\r\n    telNumber: string;\r\n    isMember: number;\r\n}","export class weatherCheckBox{\r\n    isChecked : boolean\r\n    value : string\r\n  \r\n    constructor(isChecked : boolean, value: string){\r\n      this.isChecked = isChecked;\r\n      this.value = value\r\n    }  \r\n    \r\n  }","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { UserModel } from '../../models/UserModel';\nimport {map} from 'rxjs/operators'\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  private currentUserSubject: BehaviorSubject<UserModel>;\n  public currentUser: Observable<UserModel>;\n  public test : UserModel\n\n  constructor(private http: HttpClient, private router: Router) { \n    this.currentUserSubject = new BehaviorSubject<UserModel>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  private baseUrl = environment.BaseAddress;\n  private reqHeader = new HttpHeaders({'No-Auth':'True'}); \n\n  public getUser(usedId: string): Observable<UserModel>{\n    return this.http.get<UserModel>(this.baseUrl + 'api/users/getuser/' + usedId);\n  }\n\n  public addUser(user: UserModel): Observable<any>{\n    return this.http.post(this.baseUrl + 'api/users/create', user, {headers : this.reqHeader});\n  }\n\n  public updateUser(user: UserModel): Observable<any>{\n    return this.http.post(this.baseUrl + 'api/users/update', user, {headers : this.reqHeader});\n  }\n\n  public userAuthentication(user: UserModel){\n      var data = \"username=\"+user.email+\"&password=\"+user.password+\"&grant_type=password\";\n      var reqHeader = new HttpHeaders({'Content-Type':'application/x-www-urlencoded', 'No-Auth':'True'});\n      return this.http.post(this.baseUrl+'token',data,{headers: reqHeader});\n  }\n  \n\n  public getUserClaims(){\n      return this.http.get<any>(this.baseUrl + 'api/GetUserClaims')\n      .pipe(map(user =>{\n        if(user){\n          localStorage.setItem('currentUser', JSON.stringify(user));\n          console.log(user);\n          this.currentUserSubject.next(user);\n        }\n      }));    \n  }\n\n  public logout()\n  {\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('currentUser');\n    this.router.navigateByUrl('/users/login');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { WeatherModel } from '../../models/WeatherModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n\n  constructor(private http: HttpClient) { }\n\n  private baseUrl = environment.BaseAddress;\n\n  public getWeather(): Observable<WeatherModel>{\n    return this.http.get<WeatherModel>(this.baseUrl + 'api/weather')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BaseAddress: 'https://a100196-001-site1.atempurl.com/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}